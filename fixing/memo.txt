Maria DB 
관계형 데이터베이스 서버 데이터의 저장, 검색, 관리 담당 Wordpress는 주로 Maria DB를 사용하여 사용자의 게시물, 댓글 등의 데이터를 저장하고 관리

WordPress
WordPress는 오픈 소스의 웹 콘텐츠 관리 시스템(CMS) 
사용자들이 웹사이트를 만들고 관리할 수 있도록 도와둔다
사용자가 웹사이트의 내용을 생성, 편집, 관리할 수 있으며, 테마와 플러그인을 통해 기능을 확장할 수 있다
WordPress는 MariaDB와 밀접하게 연관되어 데이터베이스에 데이터를 저장하고 사용

Nginx
Nginx는 웹 서버로서 HTTP 및 HTTPS 프로토콜을 사용하여 웹 페이지를 제공 
Nginx는 클라이언트의 요청을 받아 WordPress로부터 생성된 컨텐츠를 반환하고, 요청된 파일을 제공하거나 다른 서버에 대한 프록시 역할을 수행
또한 Nginx는 보안 및 부하 분산 등 다양한 기능을 제공하여 웹 애플리케이션의 성능을 향상

일반적으로 사용자는 Nginx를 앞단에 두고 HTTP 요청을 받아서 필요한 경우에 MariaDB로부터 데이터를 가져와 WordPress에게 처리를 위임하고, 
최종적으로 사용자에게 적절한 웹 페이지를 반환하는 형태로 이들을 함께 사용 이러한 구성은 웹 애플리케이션의 안정성, 성능, 보안을 향상시키는 데 도움이 된다

Dockerfile 명령어

FROM
- Docker 이미지를 만들기 위해 기본이 되는 베이스 이미지를 지정하는 역할

CMD
- 생성된 이미지가 컨테이너로 실행될 때 사용되는 기본 (쉘)명령어 및 인자를 정의
- 일반적으로 컨테이너 내부의 기본 애플리케이션을 실행하는 데 사용
- RUN과 비슷하지만, RUN은 이미지 작성시 실행하는 명령이고, CMD는 컨테이너를 시작할 때 실행하는 명령임

RUN

RUN 은 이미지 작성시 실행되며, 일종의 새로운 이미지 layer를 만드는 역할을 함 

- 이미지를 빌드할 때에만 실행되는 명령어
- Dockerfile 내에서 이미지를 빌드하는 단계에서 실행되며, 이미지 레이어에 변화를 준다
- 주로 패키지 설치, 소프트웨어 설치, 파일 다운로드 등의 작업을 수행

EXPOSE

컨테이너가 특정 포트를 외부에 노출시킬 때 사용
이는 컨테이너 외부에서 해당 포트로 들어오는 요청을 컨테이너 내부의 프로세스에 전달할 수 있도록 해줍니다.
TCP 포트 3306은 MySQL 서버가 클라이언트 요청을 수신하고, 데이터베이스 관련 작업을 처리하기 위해 사용



브리지 네트워크는 Docker에서 기본적으로 제공되는 네트워크 모드 중 하나입니다
이 모드에서 컨테이너는 호스트 시스템과 동일한 네트워크 상에 위치하며, 호스트 시스템의 IP 주소를 공유

브리지 네트워크를 사용하면 도커 엔진이 호스트 시스템에서 가상의 브리지 인터페이스를 생성하고, 각각의 컨테이너는 이 브리지에 연결 이렇게 하면 컨테이너 간 또는 컨테이너와 호스트 간 통신이 가능
브리지 네트워크를 사용하면 각 컨테이너는 별도의 IP 주소를 할당 
또한, 브리지 네트워크를 사용하면 호스트 시스템과 격리되어 있기 때문에, 다른 네트워크와 충돌 없이 여러 개의 컨테이너를 운영할 수 있다
이러한 특징으로 인해 브리지 네트워크는 독립적인 컨테이너를 여러 개 실행하고, 이들 간의 통신이 필요한 경우에 적합한 네트워크 모드